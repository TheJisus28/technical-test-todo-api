openapi: 2.0.0
info:
  title: Task Management API (To-Do)
  version: 1.0.0
  description: API documentation for task management (To-Do).
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier of the task.
          readOnly: true
        title:
          type: string
          description: The title of the task.
        description:
          type: string
          nullable: true
          description: A detailed description of the task.
        status:
          type: string
          enum:
            - PENDING
            - IN_PROGRESS
            - COMPLETED
          description: The current status of the task.
        createdAt:
          type: string
          format: date-time
          description: The date and time the task was created.
          readOnly: true
    CreateTaskPayload:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          description: The title of the task to create.
        description:
          type: string
          nullable: true
          description: A detailed description of the task to create.
    UpdateTaskPayload:
      type: object
      properties:
        title:
          type: string
          description: The new title of the task.
        description:
          type: string
          nullable: true
          description: The new description of the task.
        status:
          type: string
          enum:
            - PENDING
            - IN_PROGRESS
            - COMPLETED
          description: The new status of the task.
  parameters:
    taskId:
      name: id
      in: path
      required: true
      description: Identifier of the task to operate on.
      schema:
        type: string
        format: uuid
paths:
  /api/tasks:
    post:
      summary: Create a new task.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTaskPayload"
      responses:
        "201":
          description: Task created successfully. Returns the new task.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Invalid request payload.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Title is required
                  errorCode:
                    type: string
                    example: TASK_CREATE_MISSING_TITLE
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Could not create task
                  errorCode:
                    type: string
                    example: SERVER_ERROR
    get:
      summary: List all tasks, with optional filtering.
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - PENDING
              - IN_PROGRESS
              - COMPLETED
          description: Filter tasks by status.
        - in: query
          name: createdBefore
          schema:
            type: string
            format: date-time
          description: Filter tasks created before this date/time.
        - in: query
          name: createdAfter
          schema:
            type: string
            format: date-time
          description: Filter tasks created after this date/time.
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
          description: Limit the number of tasks returned.
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
          description: Page number for pagination.
      responses:
        "200":
          description: A list of tasks.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Could not list tasks
                  errorCode:
                    type: string
                    example: SERVER_ERROR
  /api/tasks/{id}:
    delete:
      summary: Delete a task by ID.
      parameters:
        - $ref: "#/components/parameters/taskId"
      responses:
        "204":
          description: Task deleted successfully.
        "404":
          description: Task not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Task with ID 'non-existent-uuid' not found
                  errorCode:
                    type: string
                    example: TASK_NOT_FOUND
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Could not delete task
                  errorCode:
                    type: string
                    example: SERVER_ERROR
    put:
      summary: Update an existing task by ID.
      parameters:
        - $ref: "#/components/parameters/taskId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTaskPayload"
      responses:
        "200":
          description: Task updated successfully. Returns the updated task.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Invalid request payload or no data to update.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Task title must be a string
                  errorCode:
                    type: string
                    example: TASK_UPDATE_INVALID_TITLE
        "404":
          description: Task not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Task with ID 'non-existent-uuid' not found
                  errorCode:
                    type: string
                    example: TASK_NOT_FOUND
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Could not update task
                  errorCode:
                    type: string
                    example: SERVER_ERROR
